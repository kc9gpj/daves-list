{"version":3,"sources":["config/keys.js","models/index.js","../node_modules/sequelize/lib/dialects/abstract sync","index.js","../node_modules/express/lib sync","config/passport-setup.js","models/user-model.js","routes/api-routes.js","../node_modules/defaultable sync","../node_modules/defaultable sync /^.*//index$","routes/html-routes.js","routes/auth-routes.js","routes/profile-routes.js"],"names":["module","exports","google","clientID","clientSecret","mongo","dbURI","session","cookieKey","__dirname","fs","require","path","Sequelize","basename","filename","config","db","use_env_variable","sequelize","process","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","webpackEmptyContext","req","e","Error","code","resolve","id","express","passport","mongoose","cookieSession","app","bodyParser","use","urlencoded","extended","json","set","maxAge","initialize","static","connect","useNewUrlParser","get","res","render","user","sync","then","listen","console","log","GoogleStrategy","Strategy","User","serializeUser","done","deserializeUser","findById","callbackURL","accessToken","refreshToken","profile","findOne","googleId","currentUser","displayName","save","newUser","userSchema","Schema","String","nodemailer","post","output","concat","body","Name","Email","Message","emailTo","ToEmail","transporter","createTransport","host","port","service","secure","auth","pass","debug","logger","mailOptions","from","to","subject","text","html","sendMail","error","info","response","redirect","Post","findAll","dbPost","where","category","params","create","title","email","price","photo","delete","destroy","put","update","sendFile","router","Router","authenticate","scope","next"],"mappings":"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","file":"static/js/main.1d499743.chunk.js","sourcesContent":["module.exports = {\n    google: {\n        clientID: \"43984348946-v5bkev5uglvifjoscg0pvj4d4qi2n8k1.apps.googleusercontent.com\",\n        clientSecret: \"lHAUTAHDRHs81m9CL-8axa5m\"\n    },\n    mongo: {\n        dbURI: \"mongodb+srv://daveslist:daveslist123@cluster0.3yl9h.mongodb.net/?retryWrites=true&w=majority\"\n    },\n    session: {\n        cookieKey: \"tryandguessmyidformycookieiditwillbeencyrpted\"\n\n    }\n};\n","\"use strict\";\n\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar Sequelize = require(\"sequelize\");\nvar basename = path.basename(module.filename);\nvar env = process.env.NODE_ENV || \"production\";\nvar config = require(__dirname + \"/../config/config.json\")[env];\nvar db = {};\n\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  var sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(function (file) {\n    return (file.indexOf(\".\") !== 0) && (file !== basename) && (file.slice(-3) === \".js\");\n  })\n  .forEach(function (file) {\n    var model = sequelize[\"import\"](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(function (modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 307;","// *****************************************************************************\n//index.js - This file is the initial starting point for the Node/Express server.\n//\n// ******************************************************************************\n// *** Dependencies\n// =============================================================\nvar express = require(\"express\");\nvar passport = require(\"passport\");\nvar passportSetup = require(\"./config/passport-setup.js\");\nvar mongoose = require(\"mongoose\");\nvar keys = require(\"./config/keys\");\nvar cookieSession = require(\"cookie-session\");\nvar app = express();\nvar bodyParser = require('body-parser');\n// Sets up the Express App\n// =============================================================\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n\n\n// set up view engine\n\n\napp.set(\"view engine\",\"html\");\napp.use(cookieSession({\n    maxAge: 24 * 60 * 60 * 1000,\n    keys: [keys.session.cookieKey]\n}));\n\n// initialize passport\napp.use(passport.initialize());\napp.use(passport.session());\n\nvar port = 3000;\n\n// Requiring our models for syncing\nvar db = require(\"./models\");\n\n// Static directory\napp.use(express.static(\"public\"));\n\n// Routes\n// =============================================================\nrequire(\"./routes/api-routes.js\")(app);\nrequire(\"./routes/html-routes.js\")(app);\napp.use(\"/auth\", require(\"./routes/auth-routes.js\"));\napp.use(\"/profile\", require(\"./routes/profile-routes.js\"));\n\n// connect to jawsdb here--may need to tweek this a bit to connect our db\nmongoose.connect(keys.mongo.dbURI, { useNewUrlParser: true });\n\napp.get(\"/\", (req, res) => {\n    res.render(\"login\", { user: req.user });\n});\n\n// Syncing our sequelize models and then starting our Express app\n// =============================================================\ndb.sequelize.sync().then(function () {\n  app.listen(3000, function () {\n    console.log(\"App listening on PORT \" + 3000);\n  });\n});\n\n\n\n\n\n\n\n\n\n\n\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 398;","const passport = require(\"passport\");\nconst GoogleStrategy = require(\"passport-google-oauth20\").Strategy\nconst keys = require(\"./keys\");\nconst User = require(\"../models/user-model\");\nvar mongoose = require(\"mongoose\");\n\npassport.serializeUser((user, done) => {\n    done(null, user.id);\n});\n// browser sends cookie back and passing in user id\npassport.deserializeUser((id, done) => {\n    User.findById(id).then((user) => {\n        done(null, user);\n    });\n});\npassport.use(\n    new GoogleStrategy({\n        clientID: keys.google.clientID,\n        clientSecret: keys.google.clientSecret,\n        callbackURL: \"https://daves-list.herokuapp.com/home\"\n    }, (accessToken, refreshToken, profile, done) => {\n        console.log(\"tokens\", accessToken, refreshToken);\n        //  check if user already exists in our db\n        console.log(\"authnticate with google\");\n        User.findOne({ googleId: profile.id }).then((currentUser) => {\n            if (currentUser) {\n                // already have the user\n                console.log(\"user is: \", currentUser);\n                done(null, currentUser);\n            } else {\n                // if not, then create user in our db\n                new User({\n                    username: profile.displayName,\n                    googleId: profile.id\n                }).save().then((newUser) => {\n                    console.log(\"new user created: \" + newUser);\n                    done(null.newUser);\n                });\n            }\n        });\n    })\n)\n","const mongoose = require(\"mongoose\");\nconst Schema = mongoose.Schema;\n// this may need to be tweeked a  bit--this is to create the schema for the db for name, age,data structure to pass to the model\nconst userSchema = new Schema({\n    username: String,\n    googleId: String\n});\n// create the model\nconst User = mongoose.model(\"user\", userSchema);\nmodule.exports = User; ","\n// Requiring our Todo model\nvar db = require(\"../models\");\nvar bodyParser = require(\"body-parser\");\nvar nodemailer = require(\"nodemailer\");\n\n\n// Routes\n// =============================================================\nmodule.exports = function(app) {\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: true }));\n// parse application/json\napp.use(bodyParser.json());\n\n// user to user email\n  app.post('/send', (req, res) => {\n    const output = `\n      <p>You have a new contact request</p>\n      <h3>Contact Details</h3>\n      <ul>  \n        <li>Name: ${req.body.Name}</li>\n        <li>Email: ${req.body.Email}</li>\n        <li>Message: ${req.body.Message}</li>\n      </ul>\n    `;\n  const emailTo = `\n       ${req.body.ToEmail}\n  `\n  var transporter = nodemailer.createTransport({\n    host: 'smtp.mail.yahoo.com',\n    port: 465,\n    service:'yahoo',\n    secure: false,\n    auth: {\n      user: 'projectemail1212@yahoo.com',\n      pass: '1111asdf'\n    },\n    debug: false,\n    logger: true\n  });\n\n  var mailOptions = {\n    from: 'projectemail1212@yahoo.com',\n    to: emailTo,\n    subject: 'daveslist',\n    text: 'You have a new daveslist message below:',\n    html: output \n  \n  };\n\n  console.log(mailOptions);\n  \n  transporter.sendMail(mailOptions, function(error, info){\n    if (error) {\n      console.log(error);\n    } else {\n      console.log('Email sent: ' + info.response);\n    }\n  \n  });\n  res.redirect(\"/home\");\n  });\n\n  // contact us email\n  app.post('/contactSend', (req, res) => {\n    const output = `\n      <p>You have a new contact request</p>\n      <h3>Contact Details</h3>\n      <ul>  \n        <li>Name: ${req.body.Name}</li>\n        <li>Email: ${req.body.Email}</li>\n        <li>Message: ${req.body.Message}</li>\n      </ul>\n    `;\n\n  var transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'hotrest123@gmail.com',\n      pass: '1111asdf'\n    }\n  });\n  \n  var mailOptions = {\n    from: 'hotrest123@gmail.com',\n    to: 'dave@dhoff.net',\n    subject: 'daveslist Contact Us Message',\n    text: 'You have a new daveslist contact us message below:',\n    html: output \n  \n  };\n  console.log(mailOptions);\n  \n  transporter.sendMail(mailOptions, function(error, info){\n    if (error) {\n      console.log(error);\n    } else {\n      console.log('Email sent: ' + info.response);\n    }\n  \n  });\n  res.redirect(\"/home\");\n  });\n  // GET route for getting all of the posts\n  app.get(\"/api/posts/\", function(req, res) {\n    db.Post.findAll({})\n      .then(function(dbPost) {\n        res.json(dbPost);\n      });\n  });\n\n  // Get route for returning posts of a specific category\n  app.get(\"/api/posts/category/:category\", function(req, res) {\n    db.Post.findAll({\n      where: {\n        category: req.params.category\n      }\n    })\n      .then(function(dbPost) {\n        res.json(dbPost);\n      });\n  });\n\n  // Get route for retrieving a single post\n  app.get(\"/api/posts/:id\", function(req, res) {\n    db.Post.findOne({\n      where: {\n        id: req.params.id\n      }\n    })\n      .then(function(dbPost) {\n        res.json(dbPost);\n      });\n  });\n\n  // POST route for saving a new post\n  app.post(\"/api/posts\", function(req, res) {\n    console.log(req.body);\n    db.Post.create({\n      title: req.body.title,\n      email: req.body.email,\n      price: req.body.price,\n      photo: req.body.photo,\n      body: req.body.body,\n      category: req.body.category\n    })\n      .then(function(dbPost) {\n        res.json(dbPost);\n      });\n  });\n\n  // DELETE route for deleting posts\n  app.delete(\"/api/posts/:id\", function(req, res) {\n    db.Post.destroy({\n      where: {\n        id: req.params.id\n      }\n    })\n      .then(function(dbPost) {\n        res.json(dbPost);\n      });\n  });\n\n  // PUT route for updating posts\n  app.put(\"/api/posts\", function(req, res) {\n    db.Post.update(req.body,\n      {\n        where: {\n          id: req.body.id\n        }\n      })\n      .then(function(dbPost) {\n        res.json(dbPost);\n      });\n  });\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 776;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 777;","// Dependencies\n// =============================================================\nvar path = require(\"path\");\n\n// Routes\n// =============================================================\nmodule.exports = function (app) {\n\n  app.get(\"/\", function (req, res) {\n    res.sendFile(path.join(__dirname, \"../public/login.html\"));\n  });\n\n  app.get(\"/form\", function (req, res) {\n    res.sendFile(path.join(__dirname, \"../public/form.html\"));\n  });\n\n  app.get(\"/home\", function (req, res) {\n    res.sendFile(path.join(__dirname, \"../public/index.html\"));\n  });\n\n  app.get(\"/email\", function (req, res) {\n    res.sendFile(path.join(__dirname, \"../public/email.html\"));\n  });\n\n  app.get(\"/login\", function (req, res) {\n    res.sendFile(path.join(__dirname, \"../public/login.html\"));\n  });\n\n  \n  \n};\n","const router = require(\"express\").Router();\nconst passport = require(\"passport\");\n\nrouter.get(\"/google\", passport.authenticate(\"google\", {\n    scope: [\"profile\"]\n}));\n\n\n// callback route for google to redirect to\nrouter.get(\"/google/redirect\", passport.authenticate(\"google\"), (req, res) => {\n    console.log(\"redirecting\");\n    // res.send(req.user);\n    res.redirect(\"/home\");\n});\nmodule.exports = router; ","const router = require(\"express\").Router();\n// middleware for checking if user is logged in\nconst authCheck = (req, res, next) => {\n    if (!req.user) {\n        //  if user is not logged in\n        res.redirect(\"/auth/login\");\n    } else {\n        // if logged in\n        next();\n    }\n};\nrouter.get(\"/\", authCheck, (req, res) => {\n    res.render(\"profile\", { user: req.user });\n});\n\n\nmodule.exports = router; "],"sourceRoot":""}